---
import ContentCard from '@components/ContentCard.astro';
import FlexList from '@components/FlexList.astro';
import { useTranslations, type LangParams } from '@utils/i18n/utils';
import { getCollection } from 'astro:content';

const { lang } = Astro.params as LangParams;
const t = useTranslations(lang);

const projects = (await getCollection('projects'))
  .map((project) => project.data)
  .toSorted((prev, next) => {
    if (prev.dateEnd === 'today') {
      if (next.dateEnd === 'today') {
        return prev.dateStart > next.dateStart ? -1 : 1;
      }
      return -1;
    } else {
      if (next.dateEnd === 'today') {
        return 1;
      }
      if (prev.dateEnd === next.dateEnd) {
        return prev.dateStart > next.dateStart ? -1 : 1;
      }
      return prev.dateEnd > next.dateEnd ? -1 : 1;
    }
  });
---

<FlexList>
  {
    projects.map((project, projectIndex) => (
      <li class="apparition" style={`--apparition-delay: ${projectIndex + 1}`}>
        <ContentCard
          img={project.img}
          imgAlt={project.imgAlt}
          title={project.title}
          content={t(project.contentTranslationKey)}
          subItems={project.technologies}
          link={project.link}
        />
      </li>
    ))
  }
</FlexList>

<style>
  li {
    min-width: min(100%, 20rem);
    max-width: 26rem;
  }
</style>
