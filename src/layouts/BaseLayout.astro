---
import "@styles/global.css";
import i18next from "i18next";
import { HeadHrefLangs } from "astro-i18next/components";

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<!DOCTYPE html>
<html lang={i18next.language}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <meta name="author" content="Antonin Ginet" />
    <meta name="description" content={description} />
    <title>{title}</title>
    <link rel="icon" type="image/svg+xml" href="/portfolio/favicon.svg" />
    <script is:inline>
      const darkThemeClass = "dark";
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"](
        darkThemeClass
      );

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark =
            document.documentElement.classList.contains(darkThemeClass);
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script>
    <HeadHrefLangs />
  </head>
  <body>
    <slot />
  </body>
</html>
