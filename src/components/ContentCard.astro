---
import Link from '@components/Link.astro';
import { dateToShortMonthYear } from '@utils/dates';
import { prefixBase } from '@utils/global';
import { type LangParams, type TranslatedMessage } from '@utils/i18n/utils';
import { Icon } from 'astro-icon/components';

const { lang } = Astro.params as LangParams;

interface Props {
  class?: string;
  img?: string;
  imgAlt?: string;
  title?: TranslatedMessage;
  dateStart: Date;
  dateEnd?: Date | 'today';
  content?: TranslatedMessage;
  subItems?: Array<{ icon: string; name: TranslatedMessage }>;
  link?: { icon: string; href: string };
}

const { class: className, img, imgAlt, title, dateStart, dateEnd, content, subItems, link, ...rest } = Astro.props;
---

<article class={className} {...rest}>
  <header>
    {img && imgAlt && <img src={`${prefixBase}${img}`} alt={imgAlt} />}
    <div class="title">
      {title && <h3>{title}</h3>}
      <p class="date">
        {dateToShortMonthYear(dateStart, lang)}{dateEnd && ` - ${dateToShortMonthYear(dateEnd, lang)}`}
      </p>
    </div>
    {
      link && (
        <Link href={link.href} target={link.href.startsWith('/') ? undefined : '_blank'} format="button">
          <Icon name={link.icon} />
        </Link>
      )
    }
  </header>
  {content && <p class="content">{content}</p>}
  {
    subItems && (
      <aside>
        {subItems && (
          <ul class="subitems">
            {subItems.map(({ icon, name }) => (
              <li>
                <Icon name={icon} />
                <span>{name}</span>
              </li>
            ))}
          </ul>
        )}
      </aside>
    )
  }
</article>

<style>
  article {
    height: 100%;
    padding: 1.5rem;
    background-color: var(--c-content-background);
    display: flex;
    flex-direction: column;
    border-width: 0.0625rem;
    border-style: solid;
    border-color: var(--c-border);
    border-radius: 0.375rem;
  }

  header {
    display: flex;
    align-items: center;
    gap: 0.625rem;
    flex-wrap: wrap;
  }

  header img {
    max-width: 3rem;
    border-width: 0.0625rem;
    border-style: solid;
    border-color: var(--c-border);
    border-radius: 50%;
  }

  .title {
    flex: 1;
  }

  .title h3 {
    font-size: 1.125rem;
  }

  .title .date {
    font-size: 0.75rem;
  }

  .content {
    font-size: 0.875rem;
    margin-top: 1rem;
  }

  aside {
    margin-top: auto;
  }

  .subitems {
    display: flex;
    gap: 0.25rem;
    flex-wrap: wrap;
    margin-top: 1.125rem;
  }

  .subitems li {
    font-size: 0.75rem;
    border-radius: 1rem;
    padding: 0.0625rem 0.625rem;
    background-color: var(--c-grey);
    display: flex;
    align-items: center;
    gap: 0.375rem;
  }

  .subitems li span {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
</style>
